<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.bucks.mapper.PurchaseMapper"> 

<resultMap type="Item" id="Item">
	<result column="item_name" property="itemName"/>
	<result column="item_num" property="itemNum"/>
</resultMap>
 
<resultMap type="Purchase" id="Purchase">
	<result column="purchase_seq" property="purchaseSeq"/>
	<result column="request_num" property="requestNum"/>
	<result column="purchase_state" property="purchaseState"/>
	<result column="purchase_date" property="purchaseDate"/>
	<result column="item_num" property="itemNum"/>
	<result column="item_qty" property="itemQty"/>
	<result column="item_pprice" property="itemPprice"/>
	<result column="item_vendor" property="itemVendor"/>
	<result column="purchase_type" property="purchaseType"/>
	<collection property="item" resultMap="Item" />

</resultMap>

<!-- 200419 이근형 작성 시작 -->
<!-- 본사 구매 관련 페이지 시작 -->
<!-- ==> insert 들어왔을때 발주요청조회에서 해당 requestNum의 상태도 update해야 한다 - 미완료(확인할것) -->
<!-- 히스토리에 insert 넣을때 Purchase_Type 신경쓸것 - 미완료 -->
<insert id="insertPurchaseOrder" parameterType="Purchase">
	<selectKey resultType="int" keyProperty="purchaseSeq" order="BEFORE">
		select purchase_seq.nextval from dual
	</selectKey>
		insert into purchase values(#{purchaseSeq}, #{requestNum}, #{purchaseState}, sysdate, 
		#{itemNum}, #{itemQty},(select item_pprice from item where item_num=#{itemNum}),
		(select item_vendor from item where item_num=#{itemNum}), #{purchaseType}) 
</insert>

<insert id="insertDeliveryFromPurchase" parameterType="Purchase">
	insert into delivery select delivery_seq.nextval, #{requestNum}, (select store_id from order where request_num = #{requestNum}),
	40, sysdate, null from purchase where purchase_seq = #{purchaseSeq}
	
</insert>



<!-- 여기에 where절 추가해서 오늘 포함 데이터만 출력하게 해야되는데 왜 자꾸 오류나지?  -->

<select id="searchPurchaseList"  parameterType="String"  resultMap="Purchase">

	<![CDATA[select p.purchase_seq, p.request_num, p.purchase_state, p.purchase_date, 
	p.item_num, i.item_name, p.item_qty, p.item_pprice, p.item_vendor, p.purchase_type 
    from purchase p left join item i on p.item_num = i.item_num ]]>
    
    <where>
    	
    	<if test="nowPurchaseState == 0">
    		<![CDATA[purchase_date <= sysdate]]>
    	</if>
    	
    	<if test="nowPurchaseState == 1">
    		<![CDATA[purchase_date > sysdate]]>
    	</if>
    	
    	<if test="nowPurchaseState == 3">
    		p.purchase_state between 32 and 33
    	</if>
    	
    	<if test="purchaseState != null and purchaseState != '' ">
    		and p.purchase_state = #{purchaseState}
    	</if>
    	
    	
    	<if test="purchaseDate != '' and purchaseDateTwo != '' ">
    		and to_char(p.purchase_date,'yy/mm/dd') between #{purchaseDate} and #{purchaseDateTwo}
    	</if>
    	
    	<if test="purchaseDate != '' and purchaseDateTwo == '' ">
    		and to_char(p.purchase_date,'yy/mm/dd') = #{purchaseDate} 
    	</if>
    	
    	<if test="purchaseDate == '' and purchaseDateTwo != '' ">
    		and to_char(p.purchase_date,'yy/mm/dd') = #{purchaseDateTwo} 
    	</if>
    	
    	<if test="requestNum != '' ">
    		and p.request_num = #{requestNum}
    	</if>
    	
    	<if test="itemVendor != '' ">
    		and p.item_vendor = #{itemVendor}
    	</if>
    	
    	<if test="purchaseType != null and purchaseType != 0 ">
    		and p.purchase_type = #{purchaseType}
    	</if>
    	
    	<if test="itemNum != ''">
    		and p.item_num = #{itemNum}
    	</if>
    	
    	<if test="itemPprice != 0 and itemPprice != null and itemPpriceTwo != 0 and itemPpriceTwo != null ">
    		and p.item_pprice between #{itemPprice} and #{itemPpriceTwo}
    	</if>
    	
    	<if test="itemPprice != 0 and itemPprice != null and itemPpriceTwo == 0 and itemPpriceTwo == null ">
    		and p.item_pprice = #{itemPprice} 
    	</if>
    	
    	<if test="itemPprice == 0 and itemPprice == null and itemPpriceTwo != 0 and itemPpriceTwo != null ">
    		and p.item_pprice = #{itemPpriceTwo}
    	</if>
    
    </where>
    	order by purchase_seq desc

</select>
 
<update id="purchaseReqConfirm" parameterType="Purchase">
	update purchase set purchase_state = 31 where purchase_seq = #{purchaseSeq}

</update>

<update id="purchaseComplete" parameterType="Purchase">
	update purchase set purchase_state = 32 where purchase_seq = #{purchaseSeq}

</update>

<update id="purchaseCompleteHQ" parameterType="Purchase">
	update purchase set purchase_state = 33 where purchase_seq = #{purchaseSeq}

</update>

<update id="purchaseCancel" parameterType="Purchase">
	update purchase set purchase_state = 99 where purchase_seq = #{purchaseSeq}

</update>

<update id="updateQtyFromPurchase" parameterType="Purchase">
		update item set item_qty= (select item_qty from item where item_num = 
		(select item_num from purchase where purchase_seq = #{purchase_seq})) + 
		(select item_qty from purchase where purchase_seq = #{purchase_seq})
        where item_num =(select item_num from purchase where purchase_seq = #{purchase_seq})
	</update>
<!-- 200419 이근형 작성 종료 -->


<!--  가을이가 추가해요 -->
<select id="selectPurchseByPlan" parameterType="String" resultType="Purchase">
	select * from purchase where purchase_Type=2 and to_char(purchase_DATE,'yyyy-mm-dd')=#{purchaseDate}
</select>
<insert id="insertAutoPurchase" parameterType="item">
	insert into purchase values(purchase_seq.nextval, #{reqNum}, 30, sysdate, #{itemNum}, #{minQty}-#{itemQty},#{itemPprice},#{itemVendor},2) 
</insert>


</mapper>







