<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.bucks.mapper.OrderItemMapper">
<!-- 지점 발주시 -->
	<!-- order_item : 지점 발주 테이블에 기록시 주문 기록(주체가 order) -->
	<sql id="orderItemPprice">
	 	(select item_Pprice from item where item_num=#{itemNum})
	</sql>
	<sql id="orderItemSprice">
	 	(select item_Sprice from item where item_num=#{itemNum})
	</sql>
	<insert id="insertStoreOrder" parameterType="OrderItem">
		<selectKey resultType="int" keyProperty="orderSeq" order="BEFORE">
			select order_seq.nextval from dual		
		</selectKey>
		insert into order_item values(ORDER_SEQ.nextval, #{requestNum}, #{storeId}, #{itemNum},
		 #{orderQty}, 999, 999, 10, sysdate, null, 0)
	</insert>
	
<!-- 지점 발주시 -->

<!-- 지점에서 발주 수정시 -->
	<!-- 오더의 구별값은 order_seq이지만 sih테이블 값으로 고유값을 뽑아올 수 없으므로 여러데이터를 비교해서 같은 결과값을 가진 값을 업데이트 -->
	<update id="updateOrderItemByStore" parameterType="StoreItemHistory">
		update order_item set item_num = #{itemNum}, order_qty=#{itemQty}, request_date=sysdate 
		where request_num=#{requestNum} and item_num=#{itemNum} and order_qty=#{itemQty} and request_date=#{historyDate}
	</update>
<!-- 지점에서 발주 수정시 -->

<!-- 지점 입고 확인시 storeItemHistory 테이블에서 일어나는 일련의 메소드 -->
	<!-- order_item : 지점에서 입고확인시 주문상태 변화 -->
	<update id="updateOrderReceiptProcess" parameterType="StoreItemHistory">
		update order_item set request_state=70 where request_num=#{requestNum}
	</update>
<!-- 지점 입고 확인시 storeItemHistory 테이블에서 일어나는 일련의 메소드 -->

	
	
</mapper>