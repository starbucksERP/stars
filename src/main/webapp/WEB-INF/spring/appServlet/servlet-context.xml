<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resources : Front Controller를 사용하지 않고 직접 응답 처리되도록 설정하는 엘리먼트 - 리소스 파일(멀티미디어, css, javascript) -->
	<!-- mapping 속성 : 리소스 파일을 요청할 수 있는 URL 패턴을 속성값으로 설정 -->
	<!-- loaction 속성 : 리소스 파일에 저장된 디렉토리 경로를 속성값으로 설정 -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/images/**" location="/resources/images/" /> 
	<resources mapping="/css/**" location="/resources/css/" /> 
	<resources mapping="/js/**" location="/resources/js/" /> 
	
	
	
	<!-- template 파일이 응답하는 viewresolver -->
	<!-- UrlBasedViewResolver : Spring 에서 제공하는 ViewResolver를 사용하지 않고 외부에서 제공하는 ViewResolver를 사용하는 기능을 제공하는 클래스 -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<!-- viewClass 필드에 외부에서 제공하는 ViewResolver 클래스명을 인젝션 -->
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<!-- order 필드에 ViewResolver 우선순위 관련 정수값을 인젝션 처리 -->
		<!-- => 정수값이 낮을수록 우선순위가 높게 설정 -->
		<beans:property name="order" value="2"/>
	</beans:bean>

	<!-- <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesView"  - 자동완성 사용할라고 씀 -->

	<!-- TilesConfigurer : TilesView 프로그램에서 사용할 뷰페이지 정보를 제공하는 XML 파일 정보를 저장한 클래스 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<!-- definitions 필드에 XML파일 경로를 배열에 저장하여 인젝션 -->
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- bean : 클래스를 Spring Bean 으로 등록하는 엘리먼트  -->
	<!-- InternalResourceViewResolver : 요청처리 메소드에서 반환된 ViewName을 응답처리하기 위한 JSP 문서로 변환하여 제공하는 클래스 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"/>
	</beans:bean>
	
	
	<context:component-scan base-package="site.bucks.controller" />	
	<context:component-scan base-package="site.bucks.dao" />	
	<context:component-scan base-package="site.bucks.service" />
	
	
</beans:beans>









