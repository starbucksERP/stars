<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 컨텍스트에 존재하는 모든 Front Controller에서 사용하기 위한 Spring Bean을 등록하는 Bean Configuration File  -->
	<!-- => DAO 관련 클래스 작성에 필요한 클래스를 Spring Bean으로 등록
			(DataSource, JdbcTemplate, SqlSessionFactory, SqlSession, TransactionManager) -->
	
	
<!-- ★★★★★★★★★★★★★★★★★★★★★★★★★Mybatis 설정★★★★★★★★★★★★★★★★★★★★★★★★★  -->

	<!-- DataSource 관련 클래스를 Spring Bean으로 등록 (Connection fool) -->
	<!-- 
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
	</bean>	
	 -->
	 <!-- <bean class="oracle.jdbc.OracleDriver"	 자동완성기능 이용하려고 씀 - 오타를 줄일 수 있는 좋은 방법 -->
	 
	<!-- log4jdbc-log4j2-jdbc4 라이브러리에서 제공되는 DriverSpy 클래스 사용 -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/> 
		<property name="url" value="jdbc:log4jdbc:oracle:thin:@182.237.126.17:1521:xe"/>
		<property name="username" value="bucks"/>
		<property name="password" value="0417"/>
	</bean>
	<!-- <bean class="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" 자동완성용 -->
	 
	 
	 
	<!-- SqlSessionFactory 관련 클래스를 Spring Bean으로 등록  -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<!-- configLocation 필드에 Mybatis 환경설정 파일 경로 인젝션 처리 -->
		<!-- => Spring Container(WebApplicationContext)가 webapp 디렉토리(/)의 자원에만 접근 가능  -->
		<!-- <property name="configLocation" value="/WEB-INF/spring/mybatis-config.xml"/>  -->
		<!-- => java 또는 resources 패키지 폴더의 자원에 접근하기 위한 classpath 접두사 사용 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- dataSource 필드에 DataSource 관련 Spring Bean 인젝션 처리 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- typeAliasesPackage 필드에 TypeAlias 기능을 제공할 패키지 경로를 인젝션 처리 -->
		<property name="typeAliasesPackage" value="site.bucks.dto"/>
		<!-- mapperLocations 필드에 Mapper 파일의 경로를 list엘리먼트로 인젝션 처리 -->
		<property name="mapperLocations">
			<list>
				<!-- *기호를 이용하여 XML Mapper 파일 등록 -->
				<value>classpath:site/bucks/mapper/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- SqlSessionTemplate 관련 클래스를 Spring Bean으로 등록  -->
	<!-- destroy-method : Spring Bean 소멸 전 메소드를 속성값으로 설정 -->
	<!-- => clearCach : SqlSession 관련 JDBC 객체를 소멸시키는 메소드 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession" destroy-method="clearCache">
		<!-- 생성자를 이용하여 Spring Bean 생성시 SqlSesiionFactory 관련 Spring Bean 인젝션 (Setter가 없으므로) -->
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>
	
	
<!-- ★★★★★★★★★★★★★★★★★★★★★★★★★Mybatis 설정★★★★★★★★★★★★★★★★★★★★★★★★★  -->

	<!-- TransactionManager 관련 클래스를 Spring Bean 으로 등록 -->
	<!-- => beanName을 반드시 transactionManager로 설정  -->
	<!-- => 서비스메소드에서 실행될때 포함되어 개입할 수 있도록 설정 <= AOP 이용 -->
	<!-- ※※※※※※※※※※※※※※※※※※※id를 무조건 transactionManager※※※※※※※※※※※※※※※※※※※ -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
</beans>
