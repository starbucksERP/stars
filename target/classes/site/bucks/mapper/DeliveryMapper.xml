<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.bucks.mapper.DeliveryMapper">
<!-- 지점에서 입고 확인시 storeItemHistory 테이블에서 일어나는 일련의 메소드 -->
	<!-- delivery : 지점에서 입고확인시 배송상태 변화 -->
	<update id="updateDeliveryReceiptProcess" parameterType="OrderItem">
		update delivery set delivery_state=#{requestState}, delivery_end=sysdate where request_num=#{requestNum}
	</update>
<!-- 지점에서 입고 확인시 storeItemHistory 테이블에서 일어나는 일련의 메소드 -->







<!-- 200417 이근형 작성 시작-->

<!-- 본사 배송관련 페이지 시작 -->
<!-- ==> insert 들어왔을때 발주요청조회에서 해당 requestNum의 상태도 update해야 한다 - 미완료(확인할것) -->
<!-- 히스토리에 insert 넣을것 - 미완료 -->
<insert id="insertDeliveryRequest" parameterType="Delivery" >
	<selectKey resultType="int" keyProperty="deliverySeq" order="BEFORE">
		select delivery_seq.nextval from dual
	</selectKey>
	insert into delivery values(#{deliverySeq}, #{requestNum}, #{storeId}, 40, sysdate, null)
</insert>

<select id="selectDelReqList" parameterType="Delivery" resultType="Delivery">
	select * from delivery 
	<where>
	<if test="nowDeliveryState==40">
		delivery_state = #{nowDeliveryState}
	</if>
	
	<if test="requestNum!=null and requestNum!=''"> 
		and request_num = #{requestNum}
	</if>
	
	<if test="storeId!=null and storeId!='' ">
		and store_id = #{storeId} 
	</if>
	</where>
	 order by delivery_seq desc
</select>

<select id="selectDelReadyList" parameterType="Delivery" resultType="Delivery">
<!-- nowDeliveryState의 값에 배송요청조회는 40 / 배송현황조회는 40이 아닌 경우 적용하여 검색 -->
	select * from delivery
	<where>
	
	<if test="nowDeliveryState==50">
		delivery_state >= 50
	</if>
	
	<if test="deliveryState!=null and deliveryState!=''">
		delivery_state = #{deliveryState}
	</if>
	
	<!-- 요청번호 검색 -->
	<if test="requestNum!=null and requestNum!=''"> 
		and request_num = #{requestNum}
	</if>
	
	<!-- 매장코드 검색 -->
	
	<if test="storeId!=null and storeId!='' ">
		and store_id = #{storeId}
	</if>
	
	<!-- 배송현황조회 페이지에서 배송시작일 단일검색인 경우 -->
	<if test="deliveryStart!=null and deliveryStart!='' and deliveryStartTwo==null and deliveryStartTwo==''">
		and delivery_start = #{deliveryStart}
	</if>
	
	<!-- 배송현황조회 페이지에서 배송시작일 범위검색인 경우 -->
	<if test="deliveryStart!=null and deliveryStart!='' and deliveryStartTwo!=null and deliveryStartTwo!=''">
		and delivery_start between #{deliveryStart} and #{deliveryStartTwo}
	</if>
	
	<!-- 배송현황조회 페이지에서 배송완료일 단위검색인 경우 -->
	<if test="deliveryEnd!=null and deliveryEnd!='' and deliveryEndTwo==null and deliveryEndTwo==''">
		and delivery_end = #{deliveryEnd}
	</if>
	
	<!-- 배송현황조회 페이지에서 배송완료일 범위검색인 경우 -->
	<if test="deliveryEnd!=null and deliveryEnd!='' and deliveryEndTwo!=null and deliveryEndTwo!=''">
		and delivery_end between #{deliveryEnd} and #{deliveryEndTwo}
	</if>

	</where>
	 order by delivery_seq desc
</select>

<update id="updateDeliveryReq">
	update delivery set delivery_state=50 where delivery_seq=#{deliverySeq}
</update>

<update id="updateDeliveryReady">
	update delivery set delivery_state=60 where delivery_seq=#{deliverySeq}
</update>

<!-- <update id="updateDeliveryState" parameterType="Delivery">
	update delivery 
	<set>
	배송요청조회 페이지에서 요청확인처리 버튼을 눌렀을 경우 실행되는 update
	==> 여기서 상태값이 변경됐으니 발주요청조회에서 해당 requestNum의 상태도 update해야 한다 - 미완료 
	히스토리에 insert 넣을것 - 미완료
	<if test="deliveryState==40"> 페이지구분(40) and 배송요청 상태인 것만
		delivery_state=50
	</if>
	
	배송현황조회 페이지에서 배송시작 버튼을 눌렀을 경우 실행되는 update
	==> 여기서 상태값이 변경됐으니 발주요청조회에서 해당 requestNum의 상태도 update해야 한다 - 미완료 
	히스토리에 insert 넣을것 - 미완료
	<if test="deliveryState==50"> 페이지구분(50) and 배송중 상태인 것만
		delivery_state=60
	</if>
	</set>
	 deliverySeq는 중복되지 않기 때문에 조건으로 사용
	
	where delivery_seq=#{deliverySeq}
</update> -->
<!-- 본사 배송관련 페이지 종료 -->

<!-- 200417 이근형 작성 종료-->

</mapper>